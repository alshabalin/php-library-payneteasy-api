<?php

namespace PaynetEasy\Paynet\Workflow;

use PaynetEasy\Paynet\Data\Order;

/**
 * Test class for CreateRecurrentCard.
 * Generated by PHPUnit on 2012-06-21 at 11:29:17.
 */
class CreateRecurrentCardTest extends SaleTest
{
    /**
     * Test class
     * @var string
     */
    protected $class            = 'CreateRecurrentCard';

    /**
     * @var CreateRecurrentCard
     */
    protected $query;

    const     CARD_REF_ID       = '5588943';

    protected function setUp()
    {
        parent::setUp();

        $this->transport->response2 = array
        (
            'type'              => 'create-card-ref-response',
            'status'            => 'approved',
            'card-ref-id'       => self::CARD_REF_ID,
            'serial-number'     => md5(time())
        );
    }

    /**
     * @dataProvider testStatusProvider
     */
    public function testStatus($assert, $server_response)
    {
        parent::testStatus($assert, $server_response);

        if(!empty($assert['status']) && $assert['status'] === Order::STATUS_APPROVED)
        {
            $card = $this->order->getRecurrentCard();

            $this->assertInstanceOf('PaynetEasy\Paynet\Data\RecurrentCardInterface', $card);
            $this->assertEquals(self::CARD_REF_ID, $card->cardrefid());
        }
    }

    /**
     * @dataProvider testCallbackProvider
     */
    public function testCallback($assert, $callback)
    {
        parent::testCallback($assert, $callback);

        if(!empty($assert['status']) && $assert['status'] === Order::STATUS_APPROVED)
        {
            $card = $this->order->getRecurrentCard();

            $this->assertInstanceOf('PaynetEasy\Paynet\Data\RecurrentCardInterface', $card);
            $this->assertEquals(self::CARD_REF_ID, $card->cardrefid());
        }
    }
}

?>

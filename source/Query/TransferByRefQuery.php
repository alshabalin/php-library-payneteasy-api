<?php

namespace PaynetEasy\Paynet\Query;

use PaynetEasy\Paynet\OrderData\OrderInterface;
use PaynetEasy\Paynet\Exception\ValidationException;

class TransferByRefQuery extends AbstractQuery
{
    /**
     * {@inheritdoc}
     */
    protected function orderToRequest(OrderInterface $order)
    {
        return array_merge
        (
            $order->getData(),
            $this->commonQueryOptions($order),
            array
            (
                'cvv2'                      => $order->getRecurrentCardFrom()->getCvv2(),
                'source-card-ref-id'        => $order->getRecurrentCardFrom()->getCardReferenceId(),
                'destination-card-ref-id'   => $order->getRecurrentCardTo()->getCardReferenceId(),
                'amount'                    => $order->getAmount(),
                'currency'                  => $order->getCurrency()
            )
        );
    }

    /**
     * {@inheritdoc}
     */
    protected function validateOrder(OrderInterface $order)
    {
        if(!$order->hasRecurrentCardFrom())
        {
            throw new ValidationException('Source RecurrentCard must be defined');
        }

        if(strlen($order->getRecurrentCardFrom()->getCvv2()) == 0)
        {
            throw new ValidationException('Source RecurrentCard CVV2 must be defined');
        }

        if(!$order->hasRecurrentCardTo())
        {
            throw new ValidationException('Destination RecurrentCard must be defined');
        }
    }

    /**
     * {@inheritdoc}
     */
    protected function createControlCode(OrderInterface $order)
    {
        // Checksum generated by SHA-1.
        // This is SHA-1 checksum of the concatenation
        // login + client_orderid + source-card-ref-id + destination-card-ref-id +
        // amount_in_cents + currency + merchant_control
        return sha1
        (
            $this->config['login'] .
            $order->getClientOrderId() .
            $order->getRecurrentCardFrom()->getCardReferenceId() .
            $order->getRecurrentCardTo()->getCardReferenceId() .
            $order->getAmountInCents() .
            $order->getCurrency() .
            $this->config['control']
        );
    }
}
<?php

namespace PaynetEasy\Paynet\Query;

use PaynetEasy\Paynet\OrderData\OrderInterface;

use RuntimeException;

class TransferByRefQuery extends AbstractQuery
{
    /**
     * {@inheritdoc}
     */
    public function createRequest(OrderInterface $order)
    {
        $this->validateOrder($order);

        $query = array_merge
        (
            $order->getData(),
            $this->commonQueryOptions(),
            $this->createControlCode($order),
            array
            (
                'cvv2'                      => $order->getRecurrentCardFrom()->getCvv2(),
                'source-card-ref-id'        => $order->getRecurrentCardFrom()->getCardRefId(),
                'destination-card-ref-id'   => $order->getRecurrentCardTo()->getCardRefId(),
                'amount'                    => $order->getAmount(),
                'currency'                  => $order->getCurrency()
            )
        );

        return $this->wrapToRequest($query);
    }

    /**
     * {@inheritdoc}
     */
    protected function validateOrder(OrderInterface $order)
    {
        if(!$order->hasRecurrentCardFrom())
        {
            throw new RuntimeException('Source RecurrentCard must be defined');
        }

        if(strlen($order->getRecurrentCardFrom()->getCvv2()) == 0)
        {
            throw new RuntimeException('Source RecurrentCard CVV2 must be defined');
        }

        if(!$order->hasRecurrentCardTo())
        {
            throw new RuntimeException('Destination RecurrentCard must be defined');
        }

        $order->validate();
        $order->getRecurrentCardFrom()->validate();
        $order->getRecurrentCardTo()->validate();
    }

    /**
     * {@inheritdoc}
     */
    protected function createControlCode(OrderInterface $order)
    {
        // Checksum generated by SHA-1.
        // This is SHA-1 checksum of the concatenation
        // login + client_orderid + source-card-ref-id + destination-card-ref-id +
        // amount_in_cents + currency + merchant_control
        return array('control' => sha1
        (
            $this->config['login'] .
            $order->getOrderCode() .
            $order->getRecurrentCardFrom()->getCardRefId() .
            $order->getRecurrentCardTo()->getCardRefId() .
            $order->getAmountInCents() .
            $order->getCurrency() .
            $this->config['control']
        ));
    }
}
<?php

namespace PaynetEasy\PaynetEasyApi\PaymentData;

use Exception;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-06-25 at 18:19:35.
 */
class PaymentTest extends \PHPUnit_Framework_TestCase
{
    static protected $serializedPayment = 'C:44:"PaynetEasy\PaynetEasyApi\PaymentData\Payment":213:{a:2:{s:6:"status";s:8:"approved";s:8:"customer";C:45:"PaynetEasy\PaynetEasyApi\PaymentData\Customer":105:{a:3:{s:9:"firstName";s:5:"Vasya";s:8:"lastName";s:6:"Pupkin";s:5:"email";s:23:"vass.pupkin@example.com";}}}}';

    /**
     * @var Payment
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Payment;
    }

    public function testSerialize()
    {
        $this->object->setCustomer(new Customer(array
        (
            'first_name'    => 'Vasya',
            'last_name'     => 'Pupkin',
            'email'         => 'vass.pupkin@example.com',
        )));

        $this->object->setStatus(Payment::STATUS_APPROVED);

        $serializedPayment = serialize($this->object);

        $this->assertEquals(static::$serializedPayment, $serializedPayment);
    }

    public function testUnserialize()
    {
        $payment = unserialize(static::$serializedPayment);

        $this->assertEquals(Payment::STATUS_APPROVED, $payment->getStatus());
        $this->assertEquals('vass.pupkin@example.com', $payment->getCustomer()->getEmail());
    }
}
